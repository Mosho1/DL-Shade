/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var parser = (function(){
var parser = {trace: function trace(){},
yy: {},
symbols_: {"error":2,"program":3,"EOF":4,"body":5,"line":6,"TERMINATOR":7,"PRINT":8,"expr":9,"classdef":10,"assignment":11,"ifblocks":12,"IF":13,"(":14,")":15,"block":16,"ELSE":17,"elseifs":18,"{":19,"}":20,"VAR":21,"IDENTIFIER":22,"ASSIGN":23,"VAL":24,"MATH":25,"COMPARE":26,"BOOLOP":27,"TERNARY":28,":":29,"closure":30,"instantiation":31,"variablecall":32,"type":33,"parameters":34,"parameter":35,",":36,"arguments":37,"FUN":38,"CLASS":39,"classbody":40,"classline":41,"method":42,"PUBLIC":43,"NEW":44,"objectref":45,".":46,"LONG":47,"DOUBLE":48,"STRING":49,"BOOLEAN":50,"csv":51,"NULL":52,"$accept":0,"$end":1},
terminals_: {2:"error",4:"EOF",7:"TERMINATOR",8:"PRINT",13:"IF",14:"(",15:")",17:"ELSE",19:"{",20:"}",21:"VAR",22:"IDENTIFIER",23:"ASSIGN",24:"VAL",25:"MATH",26:"COMPARE",27:"BOOLOP",28:"TERNARY",29:":",36:",",38:"FUN",39:"CLASS",43:"PUBLIC",44:"NEW",46:".",47:"LONG",48:"DOUBLE",49:"STRING",50:"BOOLEAN",52:"NULL"},
productions_: [0,[3,1],[3,2],[5,1],[5,3],[5,2],[6,2],[6,1],[6,1],[6,1],[6,1],[12,5],[12,7],[12,6],[12,8],[18,6],[18,7],[16,2],[16,3],[11,4],[11,4],[11,3],[9,3],[9,3],[9,3],[9,3],[9,5],[9,1],[9,1],[9,1],[9,1],[34,1],[34,3],[35,3],[35,4],[35,4],[37,1],[37,3],[30,6],[30,7],[10,5],[40,1],[40,3],[40,2],[41,1],[42,8],[42,9],[31,4],[32,3],[32,4],[32,1],[45,1],[45,3],[33,1],[33,1],[33,1],[33,1],[33,3],[33,1],[51,1],[51,3]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */
/**/) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:  
break;
case 2: return $$[$0-1]; 
break;
case 3:this.$ = [$$[$0]];
break;
case 4: this.$ = $$[$0-2]; $$[$0-2].push($$[$0]); 
break;
case 6:this.$ = new yy.Print($$[$0]);
break;
case 11:this.$ = new yy.IfBlock($$[$0-2], $$[$0]);
break;
case 12:this.$ = new yy.IfBlock($$[$0-4], $$[$0-2], $$[$0]);
break;
case 13: this.$ = new yy.IfBlock($$[$0-3], $$[$0-1], false, $$[$0]); 
break;
case 14: this.$ = new yy.IfBlock($$[$0-5], $$[$0-3], $$[$0], $$[$0-2]); 
break;
case 15: this.$ = [new yy.ElseIfBlock($$[$0-2], $$[$0])]; 
break;
case 16: this.$ = $$[$0-6]; $$[$0-6].push(new yy.ElseIfBlock($$[$0-2], $$[$0])); 
break;
case 17: this.$ = []; 
break;
case 18: this.$ = $$[$0-1]; 
break;
case 19: this.$ = new yy.AssignVariable($$[$0-2], $$[$0], $$[$0-1]); 
break;
case 20: this.$ = new yy.AssignValue($$[$0-2], $$[$0], $$[$0-1]); 
break;
case 21: this.$ = new yy.SetVariable($$[$0-2], $$[$0], $$[$0-1]); 
break;
case 22:this.$ = new yy.BracketBlock($$[$0-1]);
break;
case 23:this.$ = new yy.Math($$[$0-2], $$[$0], $$[$0-1]);
break;
case 24:this.$ = new yy.Comparison($$[$0-2], $$[$0], $$[$0-1]);
break;
case 25:this.$ = new yy.Comparison($$[$0-2], $$[$0], $$[$0-1]);
break;
case 26:this.$ = new yy.Ternary($$[$0-4], $$[$0-2], $$[$0]);
break;
case 31: this.$ = [$$[$0]] 
break;
case 32: this.$ = $$[$0-2]; $$[$0-2].push($$[$0]) 
break;
case 33:this.$ = new yy.ValueParameter($$[$0-2], $$[$0]);
break;
case 34:this.$ = new yy.ValueParameter($$[$0-2], $$[$0]);
break;
case 35:this.$ = new yy.VariableParameter($$[$0-2], $$[$0]);
break;
case 36: this.$ = [$$[$0]]; 
break;
case 37: this.$ = $$[$0-2]; $$[$0-2].push($$[$0]); 
break;
case 38:this.$ = new yy.Closure($$[$0], $$[$0-1]);
break;
case 39:this.$ = new yy.Closure($$[$0], $$[$0-4], $$[$0-1]);
break;
case 40:this.$ = new yy.Class($$[$0-3], $$[$0-1]);
break;
case 41: this.$ = [$$[$0]]; 
break;
case 42: this.$ = $$[$0-2]; $$[$0-2].push($$[$0]); 
break;
case 45:this.$ = new yy.Method($$[$0-7], $$[$0-5], $$[$0]);
break;
case 46:this.$ = new yy.Method($$[$0-8], $$[$0-6], $$[$0], $$[$0-4]);
break;
case 47:this.$ = new yy.ClassInstantiation($$[$0-2]);
break;
case 48:this.$ = new yy.CallFunction($$[$0-2]);
break;
case 49:this.$ = new yy.CallFunction($$[$0-3], $$[$0-1]);
break;
case 50:this.$ = new yy.CallVariable($$[$0]);
break;
case 51: this.$ = [$$[$0]]; 
break;
case 52: this.$ = $$[$0-2]; this.$.push($$[$0]); 
break;
case 53:this.$ = new yy.Long($$[$0]);
break;
case 54:this.$ = new yy.Double($$[$0]);
break;
case 55:this.$ = new yy.String($$[$0]);
break;
case 56:this.$ = new yy.Boolean($$[$0]);
break;
case 57:this.$ = new yy.Array($$[$0-1]);
break;
case 58:this.$ = new yy.Null($$[$0]);
break;
case 59:this.$ = [$$[$0]];
break;
case 60: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
}
},
table: [{3:1,4:[1,2],5:3,6:4,8:[1,5],9:9,10:6,11:7,12:8,13:[1,14],14:[1,15],19:[1,27],21:[1,11],22:[1,13],24:[1,12],30:16,31:17,32:18,33:19,38:[1,20],39:[1,10],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{1:[3]},{1:[2,1]},{4:[1,29],7:[1,30]},{4:[2,3],7:[2,3],20:[2,3]},{9:31,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{4:[2,7],7:[2,7],20:[2,7]},{4:[2,8],7:[2,8],20:[2,8]},{4:[2,9],7:[2,9],20:[2,9]},{4:[2,10],7:[2,10],20:[2,10],25:[1,33],26:[1,34],27:[1,35],28:[1,36]},{22:[1,37]},{22:[1,38]},{22:[1,39]},{4:[2,51],7:[2,51],14:[2,51],20:[2,51],23:[1,40],25:[2,51],26:[2,51],27:[2,51],28:[2,51],46:[2,51]},{14:[1,41]},{9:42,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{4:[2,27],7:[2,27],15:[2,27],20:[2,27],25:[2,27],26:[2,27],27:[2,27],28:[2,27],29:[2,27],36:[2,27]},{4:[2,28],7:[2,28],15:[2,28],20:[2,28],25:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],36:[2,28]},{4:[2,29],7:[2,29],15:[2,29],20:[2,29],25:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],36:[2,29]},{4:[2,30],7:[2,30],15:[2,30],20:[2,30],25:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],36:[2,30]},{14:[1,43]},{22:[1,44]},{4:[2,50],7:[2,50],14:[1,45],15:[2,50],20:[2,50],25:[2,50],26:[2,50],27:[2,50],28:[2,50],29:[2,50],36:[2,50],46:[1,46]},{4:[2,53],7:[2,53],15:[2,53],20:[2,53],25:[2,53],26:[2,53],27:[2,53],28:[2,53],29:[2,53],36:[2,53]},{4:[2,54],7:[2,54],15:[2,54],20:[2,54],25:[2,54],26:[2,54],27:[2,54],28:[2,54],29:[2,54],36:[2,54]},{4:[2,55],7:[2,55],15:[2,55],20:[2,55],25:[2,55],26:[2,55],27:[2,55],28:[2,55],29:[2,55],36:[2,55]},{4:[2,56],7:[2,56],15:[2,56],20:[2,56],25:[2,56],26:[2,56],27:[2,56],28:[2,56],29:[2,56],36:[2,56]},{9:48,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],51:47,52:[1,28]},{4:[2,58],7:[2,58],15:[2,58],20:[2,58],25:[2,58],26:[2,58],27:[2,58],28:[2,58],29:[2,58],36:[2,58]},{1:[2,2]},{4:[2,5],6:49,7:[2,5],8:[1,5],9:9,10:6,11:7,12:8,13:[1,14],14:[1,15],19:[1,27],20:[2,5],21:[1,11],22:[1,13],24:[1,12],30:16,31:17,32:18,33:19,38:[1,20],39:[1,10],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{4:[2,6],7:[2,6],20:[2,6],25:[1,33],26:[1,34],27:[1,35],28:[1,36]},{4:[2,51],7:[2,51],14:[2,51],15:[2,51],20:[2,51],25:[2,51],26:[2,51],27:[2,51],28:[2,51],29:[2,51],36:[2,51],46:[2,51]},{9:50,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{9:51,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{9:52,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{9:53,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{19:[1,54]},{23:[1,55]},{23:[1,56]},{9:57,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{9:58,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{15:[1,59],25:[1,33],26:[1,34],27:[1,35],28:[1,36]},{15:[1,60],21:[1,65],22:[1,63],24:[1,64],34:61,35:62},{14:[1,66]},{9:69,14:[1,15],15:[1,67],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,37:68,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{22:[1,70]},{20:[1,71],36:[1,72]},{20:[2,59],25:[1,33],26:[1,34],27:[1,35],28:[1,36],36:[2,59]},{4:[2,4],7:[2,4],20:[2,4]},{4:[2,23],7:[2,23],15:[2,23],20:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],36:[2,23]},{4:[2,24],7:[2,24],15:[2,24],20:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],36:[2,24]},{4:[2,25],7:[2,25],15:[2,25],20:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],36:[2,25]},{25:[1,33],26:[1,34],27:[1,35],28:[1,36],29:[1,73]},{40:74,41:75,42:76,43:[1,77]},{9:78,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{9:79,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{4:[2,21],7:[2,21],20:[2,21],25:[1,33],26:[1,34],27:[1,35],28:[1,36]},{15:[1,80],25:[1,33],26:[1,34],27:[1,35],28:[1,36]},{4:[2,22],7:[2,22],15:[2,22],20:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[2,22],29:[2,22],36:[2,22]},{29:[1,81]},{15:[1,82],36:[1,83]},{15:[2,31],36:[2,31]},{29:[1,84]},{22:[1,85]},{22:[1,86]},{15:[1,87]},{4:[2,48],7:[2,48],15:[2,48],20:[2,48],25:[2,48],26:[2,48],27:[2,48],28:[2,48],29:[2,48],36:[2,48]},{15:[1,88],36:[1,89]},{15:[2,36],25:[1,33],26:[1,34],27:[1,35],28:[1,36],36:[2,36]},{4:[2,52],7:[2,52],14:[2,52],15:[2,52],20:[2,52],25:[2,52],26:[2,52],27:[2,52],28:[2,52],29:[2,52],36:[2,52],46:[2,52]},{4:[2,57],7:[2,57],15:[2,57],20:[2,57],25:[2,57],26:[2,57],27:[2,57],28:[2,57],29:[2,57],36:[2,57]},{9:90,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{9:91,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{7:[1,93],20:[1,92]},{7:[2,41],20:[2,41]},{7:[2,44],20:[2,44]},{38:[1,94]},{4:[2,19],7:[2,19],20:[2,19],25:[1,33],26:[1,34],27:[1,35],28:[1,36]},{4:[2,20],7:[2,20],20:[2,20],25:[1,33],26:[1,34],27:[1,35],28:[1,36]},{16:95,19:[1,96]},{22:[1,97]},{29:[1,98]},{21:[1,65],22:[1,63],24:[1,64],35:99},{22:[1,100]},{29:[1,101]},{29:[1,102]},{4:[2,47],7:[2,47],15:[2,47],20:[2,47],25:[2,47],26:[2,47],27:[2,47],28:[2,47],29:[2,47],36:[2,47]},{4:[2,49],7:[2,49],15:[2,49],20:[2,49],25:[2,49],26:[2,49],27:[2,49],28:[2,49],29:[2,49],36:[2,49]},{9:103,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{20:[2,60],25:[1,33],26:[1,34],27:[1,35],28:[1,36],36:[2,60]},{4:[2,26],7:[2,26],15:[2,26],20:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],36:[2,26]},{4:[2,40],7:[2,40],20:[2,40]},{7:[2,43],20:[2,43],41:104,42:76,43:[1,77]},{22:[1,105]},{4:[2,11],7:[2,11],17:[1,106],18:107,20:[2,11]},{5:109,6:4,8:[1,5],9:9,10:6,11:7,12:8,13:[1,14],14:[1,15],19:[1,27],20:[1,108],21:[1,11],22:[1,13],24:[1,12],30:16,31:17,32:18,33:19,38:[1,20],39:[1,10],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{16:110,19:[1,96]},{22:[1,111]},{15:[2,32],36:[2,32]},{15:[2,33],36:[2,33]},{22:[1,112]},{22:[1,113]},{15:[2,37],25:[1,33],26:[1,34],27:[1,35],28:[1,36],36:[2,37]},{7:[2,42],20:[2,42]},{14:[1,114]},{13:[1,116],16:115,19:[1,96]},{4:[2,13],7:[2,13],17:[1,117],20:[2,13]},{4:[2,17],7:[2,17],15:[2,17],17:[2,17],20:[2,17],25:[2,17],26:[2,17],27:[2,17],28:[2,17],29:[2,17],36:[2,17]},{7:[1,30],20:[1,118]},{4:[2,38],7:[2,38],15:[2,38],20:[2,38],25:[2,38],26:[2,38],27:[2,38],28:[2,38],29:[2,38],36:[2,38]},{16:119,19:[1,96]},{15:[2,34],36:[2,34]},{15:[2,35],36:[2,35]},{15:[1,120],21:[1,65],22:[1,63],24:[1,64],34:121,35:62},{4:[2,12],7:[2,12],20:[2,12]},{14:[1,122]},{13:[1,124],16:123,19:[1,96]},{4:[2,18],7:[2,18],15:[2,18],17:[2,18],20:[2,18],25:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],36:[2,18]},{4:[2,39],7:[2,39],15:[2,39],20:[2,39],25:[2,39],26:[2,39],27:[2,39],28:[2,39],29:[2,39],36:[2,39]},{29:[1,125]},{15:[1,126],36:[1,83]},{9:127,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{4:[2,14],7:[2,14],20:[2,14]},{14:[1,128]},{22:[1,129]},{29:[1,130]},{15:[1,131],25:[1,33],26:[1,34],27:[1,35],28:[1,36]},{9:132,14:[1,15],19:[1,27],22:[1,32],30:16,31:17,32:18,33:19,38:[1,20],44:[1,21],45:22,47:[1,23],48:[1,24],49:[1,25],50:[1,26],52:[1,28]},{16:133,19:[1,96]},{22:[1,134]},{16:135,19:[1,96]},{15:[1,136],25:[1,33],26:[1,34],27:[1,35],28:[1,36]},{7:[2,45],20:[2,45]},{16:137,19:[1,96]},{4:[2,15],7:[2,15],17:[2,15],20:[2,15]},{16:138,19:[1,96]},{7:[2,46],20:[2,46]},{4:[2,16],7:[2,16],17:[2,16],20:[2,16]}],
defaultActions: {2:[2,1],29:[2,2]},
parseError: function parseError(str,hash){if(hash.recoverable){this.trace(str)}else{throw new Error(str)}},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};


parser._performAction = parser.performAction;
parser.performAction = function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {
    var ret = parser._performAction.call(this, yytext, yyleng, yylineno, yy, yystate, $$, _$);
    if (this.$._type) {
        this.$.lineNo = yylineno;
    }
    return ret;
};

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); };
exports.main = function commonjsMain(args){if(!args[1]){console.log("Usage: "+args[0]+" FILE");process.exit(1)}var source=require("fs").readFileSync(require("path").normalize(args[1]),"utf8");return exports.parser.parse(source)};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}