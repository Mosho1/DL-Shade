// Generated by CoffeeScript 1.7.1
(function() {
  angular.module('DLApp').directive('renderPanel', function($compile, shadeTemplate) {
    return {
      restrict: 'A',
      replace: true,
      template: '<div class="render-panel"></div>',
      scope: true,
      link: function(scope, elm, attrs) {
        scope.vars = [];
        scope.$watch(attrs.renderPanel, function(shade) {
          var raw_html;
          raw_html = shadeTemplate.toHTML(shade);
          elm.html($compile(raw_html)(scope));
          return prettyPrint();
        });
        scope.$on("Run", function() {
          return scope.graph = scope.$parent.$parent.$parent.graph;
        });
        return scope.setDLVar = function(variable) {
          return scope.graph.set(variable, parseInt(scope.vars[variable]));
        };
      }
    };
  }).directive('prettyPrintPanel', function($filter, shadeTemplate) {
    return {
      restrict: 'A',
      replace: true,
      template: '<div class="pp-panel"></div>',
      scope: true,
      link: function(scope, elm, attrs) {
        return scope.$watch(attrs.prettyPrintPanel, function(shade) {
          var code, pre, raw_html;
          raw_html = shadeTemplate.toHTML(shade);
          pre = angular.element('<pre class="prettyprint lang-html" style="font-size:0.75em"></pre>');
          code = angular.element('<code></code>');
          code.html($filter('escapeHTML')(raw_html));
          pre.append(code);
          elm.html(pre);
          return prettyPrint();
        });
      },
      controller: function($scope, $http) {
        var theme;
        $scope.$parent.theme = theme = {
          list: ['google-code-light', 'solarized-dark', 'solarized-light', 'sons-of-obsidian-dark', 'tomorrow-night-blue', 'tomorrow-night-dark', 'tomorrow-night-light', 'tomorrow-night-eighties'],
          selected: 'google-code-light'
        };
        return $scope.$watch('theme.selected', function(theme_name) {
          var url;
          url = "styles/gprettify/" + theme_name + ".css";
          return $http.get(url).then(function(response) {
            return theme.css = response.data;
          });
        });
      }
    };
  });

}).call(this);

//# sourceMappingURL=render_panel.map
