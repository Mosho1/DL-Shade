// Generated by CoffeeScript 1.7.1
(function() {
  angular.module('ShadeApp', ['ShadeServices', 'ngGrid', 'mgcrea.ngStrap.popover', 'ui.bootstrap']).directive('vText', function() {
    return {
      restrict: 'EAC',
      replace: true,
      scope: true,
      template: function(elm) {
        return '<' + elm[0].localName + ' ng-model="vars[vText].model">';
      },
      link: {
        pre: function(scope, elm, attr) {
          return scope.vText = attr.vText;
        }
      }
    };
  }).directive('datePicker', function() {
    return {
      restrict: 'AC',
      scope: true,
      template: '<div class="well well-sm" ng-model="vars[vText].model"><datepicker></datepicker></div>',
      link: {
        pre: function(scope, elm, attr) {
          return scope.vText = attr.datePicker;
        }
      }
    };
  }).directive('timePicker', function($compile) {
    return {
      restrict: 'EA',
      replace: false,
      scope: false,
      compile: function(tElm, tAttr) {
        var timePickerElement;
        timePickerElement = angular.element('<timepicker />').attr(_.omit(tAttr, function(val, key) {
          return (key === 'vText') || (/^\$.?/.test(key));
        }));
        return tElm.append(timePickerElement);
      }
    };
  }).directive('vActiveTabIndex', function() {
    return {
      restrict: 'A',
      link: function(scope, elm, attr) {
        scope.vactive = attr.vActiveTabIndex;
        scope.$watch('vars[vactive].model', function(vactive) {
          vactive = Number(vactive);
          if (angular.isDefined(scope.tabs[vactive])) {
            return _.each(scope.tabs, function(tab, ind) {
              tab.active = false;
              if (ind === vactive) {
                return tab.active = true;
              }
            });
          }
        });
        return scope.$watch('active', function(active) {
          return scope.vars[scope.vactive].model = active;
        });
      }
    };
  });

}).call(this);
