// Generated by CoffeeScript 1.7.1
(function() {
  angular.module('ShadeApp', ['ShadeServices', 'ngGrid', 'mgcrea.ngStrap.popover', 'ui.bootstrap']).directive('vActiveTabIndex', function() {
    return {
      restrict: 'A',
      link: function(scope, elm, attr) {
        scope.vactive = attr.vActiveTabIndex;
        scope.$watch('vars[vactive].model', function(vactive) {
          vactive = Number(vactive);
          if (angular.isDefined(scope.tabs[vactive])) {
            return _.each(scope.tabs, function(tab, ind) {
              tab.active = false;
              if (ind === vactive) {
                return tab.active = true;
              }
            });
          }
        });
        return scope.$watch('active', function(active) {
          return scope.vars[scope.vactive].model = active;
        });
      }
    };
  }).directive('shdImage', function($http) {
    return {
      restrict: 'E',
      replace: true,
      scope: true,
      require: '?ngModel',
      template: '<img ng-model="vars[vText].model" />',
      link: function(scope, elm, attr, ngModel) {
        scope.src = attr.src;
        scope.vText = attr.vText;
        if (angular.isDefined(ngModel)) {
          return ngModel.$render = function() {
            return $http.head(ngModel.$modelValue || 'default').success(function() {
              return elm.attr('src', ngModel.$modelValue);
            }).error(function() {
              return elm.attr('src', scope.src);
            });
          };
        }
      }
    };
  }).directive('listBox', function(vTextProvider) {
    return new vTextProvider('<select multiple ng-transclude />');
  }).directive('inputs', function(vTextProvider) {
    return new vTextProvider('<input />');
  }).directive('shdDatePicker', function(vTextProvider) {
    return new vTextProvider('<input type="text" datepicker-popup close-on-date-selection="false" />');
  }).directive('timePicker', function(vTextProvider) {
    return new vTextProvider('<div><timepicker /></div>');
  }).factory('vTextProvider', function() {
    return function(template) {
      this.restrict = 'ACE';
      this.transclude = !!template.match('ng-transclude');
      this.replace = true;
      this.scope = true;
      this.template = template.replace(/\/?>/, function(match) {
        return ' ng-model="vars[vText].model" ' + match;
      });
      this.link = function(scope, elm, attr) {
        scope.vText = attr.vText;
        if (attr.label) {
          return elm.after('<span>' + attr.label + '</span>');
        }
      };
    };
  });

}).call(this);
