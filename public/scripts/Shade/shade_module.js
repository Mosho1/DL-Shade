// Generated by CoffeeScript 1.7.1
(function() {
  angular.module('ShadeApp', ['ShadeServices', 'ngGrid', 'mgcrea.ngStrap.popover', 'ui.bootstrap']).directive('vActiveTabIndex', function() {
    return {
      restrict: 'A',
      link: function(scope, elm, attr) {
        scope.vactive = attr.vActiveTabIndex;
        scope.$watch('vars[vactive].model', function(vactive) {
          vactive = Number(vactive);
          if (angular.isDefined(scope.tabs[vactive])) {
            return _.each(scope.tabs, function(tab, ind) {
              tab.active = false;
              if (ind === vactive) {
                return tab.active = true;
              }
            });
          }
        });
        return scope.$watch('active', function(active) {
          return scope.vars[scope.vactive].model = active;
        });
      }
    };
  }).directive('listBox', function(vTextProvider) {
    return new vTextProvider('<select multiple ng-transclude />');
  }).directive('numEdit', function(vTextProvider) {
    return new vTextProvider('<input type="text" />');
  }).directive('radioButton', function(vTextProvider) {
    return new vTextProvider('<input type="radio" />');
  }).directive('checkBox', function(vTextProvider) {
    return new vTextProvider('<input type="checkbox" />');
  }).directive('textBox', function(vTextProvider) {
    return new vTextProvider('<input type="text" />');
  }).directive('shdDatePicker', function(vTextProvider) {
    return new vTextProvider('<input type="text" datepicker-popup close-on-date-selection="false" />');
  }).directive('timePicker', function(vTextProvider) {
    return new vTextProvider('<div><timepicker /></div>');
  }).factory('vTextProvider', function() {
    return function(template) {
      this.restrict = 'E';
      this.transclude = !!template.match('ng-transclude');
      this.replace = true;
      this.scope = true;
      this.template = template.replace(/\/?>/, function(match) {
        return ' ng-model="vars[vText].model" ' + match;
      });
      this.link = function(scope, elm, attr) {
        scope.vText = attr.vText;
        if (attr.label) {
          return elm.after('<span>' + attr.label + '</span>');
        }
      };
    };
  });


  /*
    .directive 'ratatat', ($compile) ->
        restrict: 'EA'
        replace: false
        scope: false
        compile: (tElm, tAttr) ->
          timePickerElement = angular.element('<timepicker />').attr(_.omit(tAttr, (val, key) ->
            (key is 'vText') or (/^\$.?/.test(key))
          ))
          tElm.append(timePickerElement)
  
  
  
    .directive 'listBox', (vTextProvider) ->
        new vTextProvider '<select multiple ng-model="vars[vText].model" ng-transclude />'
  
    .directive 'numEdit', (vTextProvider) ->
        new vTextProvider '<input type="text" ng-model="vars[vText].model" />'
  
    .directive 'radioButton', (vTextProvider) ->
        new vTextProvider '<input type="radio" ng-model="vars[vText].model" />'
  
    .directive 'textBox', (vTextProvider) ->
        new vTextProvider '<input type="text" ng-model="vars[vText].model" />'
  
    .factory 'vTextProvider', () ->
        (template) ->
          @restrict = 'E'
          @transclude = !!template.match('ng-transclude')
          @replace = true
          @scope = true
          @template = template
          @link = (scope, elm, attr) ->
            scope.vText = attr.vText
  
          return
  
  
    .directive 'listBox', () ->
      restrict: 'E'
      replace: true
      scope: true
      transclude: true
      template: '<select multiple ng-model="vars[vText].model" ng-transclude />'
      link: (scope, elm, attr) ->
          scope.vText = attr.vText
  
    .directive 'numEdit', () ->
      restrict: 'E'
      replace: true
      scope: true
      template: '<input type="text" ng-model="vars[vText].model" />'
      link: (scope, elm, attr) ->
        scope.vText = attr.vText
  
    .directive 'radioButton', () ->
      restrict: 'E'
      replace: true
      scope: true
      template: '<input type="radio" ng-model="vars[vText].model" />'
      link: (scope, elm, attr) ->
        scope.vText = attr.vText
  
    .directive 'textBox', () ->
      restrict: 'E'
      replace: true
      scope: true
      template: '<input type="text" ng-model="vars[vText].model" />'
      link: (scope, elm, attr) ->
        scope.vText = attr.vText
  
  
    .directive 'datePicker', () ->
    restrict: 'AC'
    scope: true
    template: '<div class="well well-sm" ng-model="vars[vText].model"><datepicker></datepicker></div>'
    link:
      pre: (scope, elm, attr) ->
        scope.vText = attr.datePicker
   */

}).call(this);
