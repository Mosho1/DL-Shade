// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  var NodeHandlers, template, templateData, x2js, xmlHttp;

  angular.module('DLApp').controller('ShadeCtrl', function($scope, $rootScope, $http, $element) {
    var NodeHandlers, template, templateData, x2js;
    $scope.vars = [];
    x2js = new X2JS;
    templateData = x2js.xml_str2json($scope.shade);
    NodeHandlers = {
      'Grid': 'pure-g'
    };
    _.extend(templateData, {
      'NodeHandlers': NodeHandlers
    });
    template = _.template($http.get('scripts/shade_template.ejs').success(function(data, status, headers, config) {
      return $($element[0]).append(template(templateData));
    }));
    return $scope.setDLVar = function(variable) {
      var httpGet;
      $scope.graph.set(variable, parseInt($scope.vars[variable]));
      return httpGet = function(theUrl) {};
    };
  });

  xmlHttp = null;

  xmlHttp = new XMLHttpRequest();

  xmlHttp.open("GET", theUrl, false);

  xmlHttp.send(null);

  xmlHttp.responseText;

  _.templateSettings.variable = "shd";

  x2js = new X2JS;

  template = _.template(httpGet('scripts/shade_template.ejs'));

  templateData = x2js.xml_str2json(httpGet('XML/shade.xml'));

  NodeHandlers = {
    'Grid': 'pure-g'
  };

  _.extend(templateData, {
    'NodeHandlers': NodeHandlers
  });

  $("body").append(template(templateData))({
    getGraph: function(litcoffee, style, callback) {
      return $http.post("/sendDL", {
        'DLcode': litcoffee,
        'Shade': style
      }).success(function(data, status, headers, config) {
        return callback(new window.Graph(data));
      });
    }
  });

}).call(this);

//# sourceMappingURL=ShadeCtrl.map
